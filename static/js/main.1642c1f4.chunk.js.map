{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","API_URL","FindMovie","onAdd","useState","query","setQuery","setMovie","hasError","setHasError","isLoading","setIsLoading","isButtonDisabled","match","onSubmit","event","preventDefault","fetch","then","res","json","imdbID","Error","Title","Poster","Plot","catch","Response","getMovie","response","finally","htmlFor","type","id","placeholder","classNames","value","onChange","target","disabled","onClick","App","setMovies","movieToAdd","every","state","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1642c1f4.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { Movie } from './types/Movie';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_KEY = '91eaadf3';\nconst API_URL = `https://www.omdbapi.com/?apikey=${API_KEY}`;\n\ntype MoviePromise = Promise<Movie | ResponseError>;\n\nexport function getMovie(query: string): MoviePromise {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .then(movie => {\n      if (!movie.imdbID) {\n        throw new Error('Can\\'t find a movie with such a title');\n      }\n\n      const {\n        Title,\n        Poster,\n        Plot,\n        imdbID,\n      } = movie;\n\n      return {\n        title: Title,\n        description: Plot,\n        imgUrl: Poster === 'N/A'\n          ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n          : Poster,\n        imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n        imdbId: imdbID,\n      };\n    })\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport './FindMovie.scss';\nimport { getMovie } from '../../api';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  onAdd: (movie: Movie) => void\n};\n\nexport const FindMovie: React.FC<Props> = ({ onAdd }) => {\n  const [query, setQuery] = useState('');\n  const [movie, setMovie] = useState<null | Movie>(null);\n  const [hasError, setHasError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const isButtonDisabled = !query.match(/\\S/g);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n\n    if (hasError) {\n      setHasError(false);\n    }\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setIsLoading(true);\n\n    getMovie(query)\n      .then(response => {\n        if ('Error' in response) {\n          setHasError(true);\n        } else {\n          setMovie(response);\n        }\n      })\n      .finally(() => setIsLoading(false));\n  };\n\n  const handleAdd = () => {\n    if (movie) {\n      onAdd(movie);\n      setQuery('');\n      setMovie(null);\n      setHasError(false);\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', {\n                'is-danger': hasError,\n              })}\n              value={query}\n              onChange={handleChange}\n            />\n          </div>\n\n          {hasError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames('button is-light', {\n                'is-loading': isLoading,\n              })}\n              disabled={isButtonDisabled}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            {movie && (\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAdd}\n              >\n                Add to the list\n              </button>\n            )}\n          </div>\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (movieToAdd: Movie) => {\n    if (movies.every(movie => movie.imdbId !== movieToAdd.imdbId)) {\n      setMovies(state => [...state, movieToAdd]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie onAdd={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}